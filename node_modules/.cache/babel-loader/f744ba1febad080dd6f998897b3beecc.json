{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\maari\\\\developerFolio\\\\src\\\\containers\\\\projects\\\\Projects.js\";\nimport React, { useState, useEffect } from \"react\";\nimport ApolloClient from \"apollo-boost\";\nimport { gql } from \"apollo-boost\";\nimport \"./Project.css\";\nimport GithubRepoCard from \"../../components/githubRepoCard/GithubRepoCard\";\nimport Button from \"../../components/button/Button\";\nimport { openSource, socialMediaLinks } from \"../../portfolio\";\nimport { Fade } from \"react-reveal\";\nexport default function Projects() {\n  const [repo, setrepo] = useState([]);\n  useEffect(() => {\n    getRepoData();\n  }, []);\n\n  function getRepoData() {\n    const client = new ApolloClient({\n      uri: \"https://api.github.com/graphql\",\n      request: operation => {\n        operation.setContext({\n          headers: {\n            authorization: `Bearer ${openSource.githubConvertedToken}`\n          }\n        });\n      }\n    });\n    client.query({\n      query: gql`\n        {\n        user(login: \"${openSource.githubUserName}\") {\n          pinnedItems(first: 6, types: [REPOSITORY]) {\n            totalCount\n            edges {\n              node {\n                ... on Repository {\n                  name\n                  description\n                  forkCount\n                  stargazers {\n                    totalCount\n                  }\n                  url\n                  id\n                  diskUsage\n                  primaryLanguage {\n                    name\n                    color\n                  }\n                }\n              }\n            }\n          }\n        }\n      }\n        `\n    }).then(result => {\n      setrepoFunction(result.data.user.pinnedItems.edges);\n      console.log(result);\n    });\n  }\n\n  function setrepoFunction(array) {\n    setrepo(array);\n  }\n\n  return /*#__PURE__*/React.createElement(Fade, {\n    bottom: true,\n    duration: 1000,\n    distance: \"20px\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"main\",\n    id: \"opensource\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"h1\", {\n    className: \"project-title\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 9\n    }\n  }, \"Open Source Projects\"), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"repo-cards-div-main\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 9\n    }\n  }, repo.map((v, i) => {\n    return /*#__PURE__*/React.createElement(GithubRepoCard, {\n      repo: v,\n      key: v.node.id,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 20\n      }\n    });\n  })), /*#__PURE__*/React.createElement(Button, {\n    text: \"More Projects\",\n    className: \"project-button\",\n    href: socialMediaLinks.github,\n    newTab: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 9\n    }\n  })));\n}","map":{"version":3,"sources":["C:/Users/maari/developerFolio/src/containers/projects/Projects.js"],"names":["React","useState","useEffect","ApolloClient","gql","GithubRepoCard","Button","openSource","socialMediaLinks","Fade","Projects","repo","setrepo","getRepoData","client","uri","request","operation","setContext","headers","authorization","githubConvertedToken","query","githubUserName","then","result","setrepoFunction","data","user","pinnedItems","edges","console","log","array","map","v","i","node","id","github"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AACA,OAAOC,YAAP,MAAyB,cAAzB;AACA,SAASC,GAAT,QAAoB,cAApB;AACA,OAAO,eAAP;AACA,OAAOC,cAAP,MAA2B,gDAA3B;AACA,OAAOC,MAAP,MAAmB,gCAAnB;AACA,SAASC,UAAT,EAAqBC,gBAArB,QAA6C,iBAA7C;AACA,SAASC,IAAT,QAAqB,cAArB;AAEA,eAAe,SAASC,QAAT,GAAoB;AACjC,QAAM,CAACC,IAAD,EAAOC,OAAP,IAAkBX,QAAQ,CAAC,EAAD,CAAhC;AAEAC,EAAAA,SAAS,CAAC,MAAM;AACdW,IAAAA,WAAW;AACZ,GAFQ,EAEN,EAFM,CAAT;;AAIA,WAASA,WAAT,GAAuB;AACrB,UAAMC,MAAM,GAAG,IAAIX,YAAJ,CAAiB;AAC9BY,MAAAA,GAAG,EAAE,gCADyB;AAE9BC,MAAAA,OAAO,EAAGC,SAAD,IAAe;AACtBA,QAAAA,SAAS,CAACC,UAAV,CAAqB;AACnBC,UAAAA,OAAO,EAAE;AACPC,YAAAA,aAAa,EAAG,UAASb,UAAU,CAACc,oBAAqB;AADlD;AADU,SAArB;AAKD;AAR6B,KAAjB,CAAf;AAWAP,IAAAA,MAAM,CACHQ,KADH,CACS;AACLA,MAAAA,KAAK,EAAElB,GAAI;;uBAEIG,UAAU,CAACgB,cAAe;;;;;;;;;;;;;;;;;;;;;;;;;;AAHpC,KADT,EA+BGC,IA/BH,CA+BSC,MAAD,IAAY;AAChBC,MAAAA,eAAe,CAACD,MAAM,CAACE,IAAP,CAAYC,IAAZ,CAAiBC,WAAjB,CAA6BC,KAA9B,CAAf;AACAC,MAAAA,OAAO,CAACC,GAAR,CAAYP,MAAZ;AACD,KAlCH;AAmCD;;AAED,WAASC,eAAT,CAAyBO,KAAzB,EAAgC;AAC9BrB,IAAAA,OAAO,CAACqB,KAAD,CAAP;AACD;;AAED,sBACE,oBAAC,IAAD;AAAM,IAAA,MAAM,MAAZ;AAAa,IAAA,QAAQ,EAAE,IAAvB;AAA6B,IAAA,QAAQ,EAAC,MAAtC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAK,IAAA,SAAS,EAAC,MAAf;AAAsB,IAAA,EAAE,EAAC,YAAzB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAI,IAAA,SAAS,EAAC,eAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,4BADF,eAEE;AAAK,IAAA,SAAS,EAAC,qBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGtB,IAAI,CAACuB,GAAL,CAAS,CAACC,CAAD,EAAIC,CAAJ,KAAU;AAClB,wBAAO,oBAAC,cAAD;AAAgB,MAAA,IAAI,EAAED,CAAtB;AAAyB,MAAA,GAAG,EAAEA,CAAC,CAACE,IAAF,CAAOC,EAArC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAAP;AACD,GAFA,CADH,CAFF,eAOE,oBAAC,MAAD;AAAQ,IAAA,IAAI,EAAE,eAAd;AAA+B,IAAA,SAAS,EAAC,gBAAzC;AAA0D,IAAA,IAAI,EAAE9B,gBAAgB,CAAC+B,MAAjF;AAAyF,IAAA,MAAM,EAAE,IAAjG;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAPF,CADF,CADF;AAaD","sourcesContent":["import React, { useState, useEffect } from \"react\";\r\nimport ApolloClient from \"apollo-boost\";\r\nimport { gql } from \"apollo-boost\";\r\nimport \"./Project.css\";\r\nimport GithubRepoCard from \"../../components/githubRepoCard/GithubRepoCard\";\r\nimport Button from \"../../components/button/Button\";\r\nimport { openSource, socialMediaLinks } from \"../../portfolio\";\r\nimport { Fade } from \"react-reveal\";\r\n\r\nexport default function Projects() {\r\n  const [repo, setrepo] = useState([]);\r\n\r\n  useEffect(() => {\r\n    getRepoData();\r\n  }, []);\r\n\r\n  function getRepoData() {\r\n    const client = new ApolloClient({\r\n      uri: \"https://api.github.com/graphql\",\r\n      request: (operation) => {\r\n        operation.setContext({\r\n          headers: {\r\n            authorization: `Bearer ${openSource.githubConvertedToken}`,\r\n          },\r\n        });\r\n      },\r\n    });\r\n\r\n    client\r\n      .query({\r\n        query: gql`\r\n        {\r\n        user(login: \"${openSource.githubUserName}\") {\r\n          pinnedItems(first: 6, types: [REPOSITORY]) {\r\n            totalCount\r\n            edges {\r\n              node {\r\n                ... on Repository {\r\n                  name\r\n                  description\r\n                  forkCount\r\n                  stargazers {\r\n                    totalCount\r\n                  }\r\n                  url\r\n                  id\r\n                  diskUsage\r\n                  primaryLanguage {\r\n                    name\r\n                    color\r\n                  }\r\n                }\r\n              }\r\n            }\r\n          }\r\n        }\r\n      }\r\n        `,\r\n      })\r\n      .then((result) => {\r\n        setrepoFunction(result.data.user.pinnedItems.edges);\r\n        console.log(result);\r\n      });\r\n  }\r\n\r\n  function setrepoFunction(array) {\r\n    setrepo(array);\r\n  }\r\n\r\n  return (\r\n    <Fade bottom duration={1000} distance=\"20px\">\r\n      <div className=\"main\" id=\"opensource\">\r\n        <h1 className=\"project-title\">Open Source Projects</h1>\r\n        <div className=\"repo-cards-div-main\">\r\n          {repo.map((v, i) => {\r\n            return <GithubRepoCard repo={v} key={v.node.id} />;\r\n          })}\r\n        </div>\r\n        <Button text={\"More Projects\"} className=\"project-button\" href={socialMediaLinks.github} newTab={true} />\r\n      </div>\r\n    </Fade>\r\n  );\r\n}\r\n"]},"metadata":{},"sourceType":"module"}